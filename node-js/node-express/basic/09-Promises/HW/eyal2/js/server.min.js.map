{"version":3,"sources":["server.js"],"names":["_express","_interopRequireDefault","require","_bodyParser","_cookieParser","_nodeFetch","_urlEncodeDecode","app","port","process","env","PORT","detectLang","text","lang","regeneratorRuntime","async","_context3","prev","next","awrap","method","post","content-type","accept-encoding","x-rapidapi-key","x-rapidapi-host","body","q","concat","then","response","console","json","err","error","abrupt","stop","GetLangFromAPI","languages","_context4","transaction","log","use","get","req","res","AllLangs","_context","sent","send","fromLang","_req$body","_fromLang","toLang","message","_context2","translate","t0","fromLng","toLng","massage","translatedMessage","textToTranslate","_context5","encode","headers","responseData","translatedText","listen"],"mappings":"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","file":"server.min.js","sourcesContent":["import express from 'express';\r\nimport { json } from 'body-parser';\r\nimport cookieParser from 'cookie-parser';\r\nimport fetch from 'node-fetch';\r\nimport { encode } from 'url-encode-decode';\r\n\r\nconst app = express();\r\nconst port = process.env.PORT || 3000;\r\n\r\napp.use(cookieParser());\r\napp.use(json());\r\napp.use('public');\r\n\r\napp.get('/getLang', async (req, res) => {\r\n  console.log('in the getLang')  \r\n  const AllLangs = await GetLangFromAPI();\r\n    res.send( AllLangs );\r\n});\r\n\r\n\r\n\r\napp.post('/SendTranslation', async (req, res) => {\r\n  \r\n  //const fromLang = req.body.formlang;\r\n  const fromLang = await detectLang(req.body.message);\r\n  console.log(`detectLang: ${fromLang}`)\r\n   try {\r\n    const {fromLang, toLang,message} = req.body;   \r\n    const transaction = await translate(fromLang,toLang,message);\r\n   // console.log(transaction);\r\n    res.send({ transaction });\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n});\r\n\r\nasync function detectLang(text){\r\n  let lang;\r\n await fetch(\"https://google-translate1.p.rapidapi.com/language/translate/v2/detect\", {\r\n    \"method\": \"POST\",\r\n    \"headers\": {\r\n      \"content-type\": \"application/x-www-form-urlencoded\",\r\n      \"accept-encoding\": \"application/gzip\",\r\n      \"x-rapidapi-key\": \"2dae7de7a8msh9ca6fa97f167561p1494d2jsn956ba9663ea0\",\r\n      \"x-rapidapi-host\": \"google-translate1.p.rapidapi.com\"\r\n    },\r\n    \"body\": {\r\n      \"q\": `${text}`\r\n    }\r\n  })\r\n  .then(response => {\r\n   // console.log(response);\r\n    lang = response;\r\n  }).then((response) => response.json({ response }))\r\n  .catch(err => {\r\n    console.error(err);\r\n  });\r\n  return lang;\r\n}\r\n\r\nasync function GetLangFromAPI(){\r\n  let languages;\r\n    await fetch(`https://ws.detectlanguage.com/0.2/languages`)\r\n    .then((response) => response.json({ response }))\r\n    .then((response) => {\r\n      languages = response;\r\n      console.log('ok' ,response )\r\n      \r\n    })\r\n    .catch((err) => {\r\n      console.error(err);\r\n    });\r\n  return languages;\r\n};\r\n\r\nconst translate = async (fromLng, toLng, massage) => {\r\n  let translatedMessage;\r\n  let textToTranslate = encode(massage);\r\n  await fetch(\r\n    `https://translated-mymemory---translation-memory.p.rapidapi.com/api/get?langpair=${fromLng}%7C${toLng}&q=${textToTranslate}&mt=1&onlyprivate=1&de=a%40b.c`,\r\n    {\r\n      method: 'GET',\r\n      headers: {\r\n        'x-rapidapi-key': '2dae7de7a8msh9ca6fa97f167561p1494d2jsn956ba9663ea0',\r\n        'x-rapidapi-host':\r\n          'translated-mymemory---translation-memory.p.rapidapi.com',\r\n      },\r\n    }\r\n  )\r\n    .then((response) => response.json({ response }))\r\n    .then((response) => {\r\n      translatedMessage = response.responseData.translatedText;\r\n    })\r\n    .catch((err) => {\r\n      console.error(err);\r\n    });\r\n  return translatedMessage;\r\n};\r\n\r\napp.listen(port, () => {\r\n  console.log(`Listen on port ${port}`);\r\n});\r\n"]}